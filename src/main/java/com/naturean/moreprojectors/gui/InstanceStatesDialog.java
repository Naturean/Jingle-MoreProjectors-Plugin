package com.naturean.moreprojectors.gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import xyz.duncanruns.jingle.instance.InstanceState;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.LinkedHashSet;

public class InstanceStatesDialog extends JDialog {
    private JPanel instanceStatesPanel;
    private JCheckBox waitingCheckBox;
    private JCheckBox titleCheckBox;
    private JCheckBox inWorldCheckBox;
    private JCheckBox wallCheckBox;
    private JPanel selectPanel;
    private JPanel buttonPanel;
    private JButton OKButton;
    private JButton cancelButton;

    public boolean cancelled = false;

    public LinkedHashSet<InstanceState> allowedInstanceStates = new LinkedHashSet<>();

    public InstanceStatesDialog(JDialog owner, LinkedHashSet<InstanceState> allowedInstanceStates) {
        super(owner);

        $$$setupUI$$$();

        this.waitingCheckBox.setSelected(allowedInstanceStates.contains(InstanceState.WAITING));
        this.titleCheckBox.setSelected(allowedInstanceStates.contains(InstanceState.TITLE));
        this.inWorldCheckBox.setSelected(allowedInstanceStates.contains(InstanceState.INWORLD));
        this.wallCheckBox.setSelected(allowedInstanceStates.contains(InstanceState.WALL));

        this.setContentPane(this.instanceStatesPanel);

        // To avoid operation on owner when dialog showing
        this.setModal(true);
        this.setModalityType(ModalityType.APPLICATION_MODAL);

        // Default button when dialog shows
        this.getRootPane().setDefaultButton(this.OKButton);

        this.setTitle("设置实例状态");

        OKButton.addActionListener(e -> InstanceStatesDialog.this.onOK());
        cancelButton.addActionListener(e -> InstanceStatesDialog.this.onCancel());

        // Click cross icon for cancel.
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                InstanceStatesDialog.this.onCancel();
            }
        });

        // Press ESCAPE to call for onCancel()
        this.instanceStatesPanel.registerKeyboardAction(
                e -> InstanceStatesDialog.this.onCancel(),
                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
                JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
        );

        this.pack();

        // Set location at the center of owner
        this.setLocationRelativeTo(owner);
    }

    private void onOK() {
        if (this.waitingCheckBox.isSelected()) this.allowedInstanceStates.add(InstanceState.WAITING);
        if (this.titleCheckBox.isSelected()) this.allowedInstanceStates.add(InstanceState.TITLE);
        if (this.inWorldCheckBox.isSelected()) this.allowedInstanceStates.add(InstanceState.INWORLD);
        if (this.wallCheckBox.isSelected()) this.allowedInstanceStates.add(InstanceState.WALL);

        this.dispose();
    }

    private void onCancel() {
        this.cancelled = true;
        this.dispose();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        instanceStatesPanel = new JPanel();
        instanceStatesPanel.setLayout(new GridLayoutManager(2, 1, new Insets(5, 10, 10, 10), -1, -1));
        selectPanel = new JPanel();
        selectPanel.setLayout(new GridLayoutManager(4, 1, new Insets(0, 0, 0, 0), -1, -1));
        instanceStatesPanel.add(selectPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        waitingCheckBox = new JCheckBox();
        waitingCheckBox.setText("等待");
        selectPanel.add(waitingCheckBox, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        titleCheckBox = new JCheckBox();
        titleCheckBox.setText("标题");
        selectPanel.add(titleCheckBox, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        inWorldCheckBox = new JCheckBox();
        inWorldCheckBox.setText("世界内");
        selectPanel.add(inWorldCheckBox, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        wallCheckBox = new JCheckBox();
        wallCheckBox.setText("墙");
        selectPanel.add(wallCheckBox, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonPanel = new JPanel();
        buttonPanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        instanceStatesPanel.add(buttonPanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        OKButton = new JButton();
        OKButton.setText("确认");
        buttonPanel.add(OKButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cancelButton = new JButton();
        cancelButton.setText("取消");
        buttonPanel.add(cancelButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return instanceStatesPanel;
    }

}
