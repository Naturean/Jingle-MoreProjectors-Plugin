package com.naturean.moreprojectors.gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import xyz.duncanruns.jingle.instance.InstanceState;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.LinkedHashSet;

public class InWorldStatesDialog extends JDialog {
    private JPanel inWorldStatesPanel;
    private JCheckBox unpausedCheckBox;
    private JCheckBox pausedCheckBox;
    private JCheckBox gameScreenOpenCheckBox;
    private JButton OKButton;
    private JButton cancelButton;
    private JPanel selectPanel;
    private JPanel buttonPanel;

    public boolean cancelled = false;

    public LinkedHashSet<InstanceState.InWorldState> allowedInWorldStates = new LinkedHashSet<>();

    public InWorldStatesDialog(JDialog owner, LinkedHashSet<InstanceState.InWorldState> allowedInWorldStates) {
        super(owner);

        $$$setupUI$$$();

        this.unpausedCheckBox.setSelected(allowedInWorldStates.contains(InstanceState.InWorldState.UNPAUSED));
        this.pausedCheckBox.setSelected(allowedInWorldStates.contains(InstanceState.InWorldState.PAUSED));
        this.gameScreenOpenCheckBox.setSelected(allowedInWorldStates.contains(InstanceState.InWorldState.GAMESCREENOPEN));

        this.setContentPane(this.inWorldStatesPanel);

        // To avoid operation on owner when dialog showing
        this.setModal(true);
        this.setModalityType(ModalityType.APPLICATION_MODAL);

        // Default button when dialog shows
        this.getRootPane().setDefaultButton(this.OKButton);

        this.setTitle("设置世界内状态");

        OKButton.addActionListener(e -> InWorldStatesDialog.this.onOK());
        cancelButton.addActionListener(e -> InWorldStatesDialog.this.onCancel());

        // Click cross icon for cancel.
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                InWorldStatesDialog.this.onCancel();
            }
        });

        // Press ESCAPE to call for onCancel()
        this.inWorldStatesPanel.registerKeyboardAction(
                e -> InWorldStatesDialog.this.onCancel(),
                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
                JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT
        );

        this.pack();

        // Set location at the center of owner
        this.setLocationRelativeTo(owner);
    }

    private void onOK() {
        if (this.unpausedCheckBox.isSelected()) this.allowedInWorldStates.add(InstanceState.InWorldState.UNPAUSED);
        if (this.pausedCheckBox.isSelected()) this.allowedInWorldStates.add(InstanceState.InWorldState.PAUSED);
        if (this.gameScreenOpenCheckBox.isSelected())
            this.allowedInWorldStates.add(InstanceState.InWorldState.GAMESCREENOPEN);

        this.dispose();
    }

    private void onCancel() {
        this.cancelled = true;
        this.dispose();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        inWorldStatesPanel = new JPanel();
        inWorldStatesPanel.setLayout(new GridLayoutManager(2, 1, new Insets(5, 10, 10, 10), -1, -1));
        selectPanel = new JPanel();
        selectPanel.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        inWorldStatesPanel.add(selectPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        unpausedCheckBox = new JCheckBox();
        unpausedCheckBox.setText("未暂停");
        selectPanel.add(unpausedCheckBox, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pausedCheckBox = new JCheckBox();
        pausedCheckBox.setText("暂停");
        selectPanel.add(pausedCheckBox, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        gameScreenOpenCheckBox = new JCheckBox();
        gameScreenOpenCheckBox.setText("游戏界面打开");
        selectPanel.add(gameScreenOpenCheckBox, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonPanel = new JPanel();
        buttonPanel.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        inWorldStatesPanel.add(buttonPanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        OKButton = new JButton();
        OKButton.setText("确认");
        buttonPanel.add(OKButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cancelButton = new JButton();
        cancelButton.setText("取消");
        buttonPanel.add(cancelButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return inWorldStatesPanel;
    }

}
